{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\OneDrive\\\\Documents\\\\GitHub\\\\Group-11\\\\frontend\\\\src\\\\components\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cartItems, setCartItems] = useState([]);\n  const [productDetails, setProductDetails] = useState({});\n  const fetchProductDetails = async productId => {\n    try {\n      const response = await api.get(`/products/${productId}`);\n      setProductDetails(prevDetails => ({\n        ...prevDetails,\n        [productId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching product details:', error);\n    }\n  };\n  // Add this useEffect block\n  useEffect(() => {\n    cartItems.forEach(item => {\n      if (!productDetails[item.productId] && item.productId) {\n        fetchProductDetails(item.productId);\n      }\n    });\n  }, [cartItems]);\n  const addToCart = async productId => {\n    try {\n      // Retrieve the authentication token from local storage or another source\n      const token = localStorage.getItem('authToken');\n      const response = await api.post('/carts/add', {\n        productId,\n        quantity: 1\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setCartItems(response.data.cart.items);\n      fetchProductDetails(productId);\n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      productDetails\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"M6UplEM7VbMEs8QxhljtrWJHDck=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","api","jsxDEV","_jsxDEV","CartContext","CartProvider","_ref","_s","children","cartItems","setCartItems","productDetails","setProductDetails","fetchProductDetails","productId","response","get","prevDetails","data","error","console","forEach","item","addToCart","token","localStorage","getItem","post","quantity","headers","cart","items","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/james/OneDrive/Documents/GitHub/Group-11/frontend/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport api from '../api';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [productDetails, setProductDetails] = useState({});\r\n\r\n  const fetchProductDetails = async (productId) => {\r\n    try {\r\n      const response = await api.get(`/products/${productId}`);\r\n      setProductDetails((prevDetails) => ({\r\n        ...prevDetails,\r\n        [productId]: response.data,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching product details:', error);\r\n    }\r\n  };\r\n// Add this useEffect block\r\nuseEffect(() => {\r\n  cartItems.forEach((item) => {\r\n    if (!productDetails[item.productId] && item.productId) {\r\n      fetchProductDetails(item.productId);\r\n    }\r\n  });\r\n}, [cartItems]);\r\n\r\n\r\n  const addToCart = async (productId) => {\r\n    try {\r\n      // Retrieve the authentication token from local storage or another source\r\n      const token = localStorage.getItem('authToken');\r\n\r\n      const response = await api.post(\r\n        '/carts/add',\r\n        { productId, quantity: 1 },\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setCartItems(response.data.cart.items);\r\n      fetchProductDetails(productId);\r\n    } catch (error) {\r\n      console.error('Error adding item to cart:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, productDetails }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAE;AAE1C,OAAO,MAAMO,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExD,MAAMa,mBAAmB,GAAG,MAAOC,SAAS,IAAK;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAE,aAAYF,SAAU,EAAC,CAAC;MACxDF,iBAAiB,CAAEK,WAAW,KAAM;QAClC,GAAGA,WAAW;QACd,CAACH,SAAS,GAAGC,QAAQ,CAACG;MACxB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EACH;EACApB,SAAS,CAAC,MAAM;IACdU,SAAS,CAACY,OAAO,CAAEC,IAAI,IAAK;MAC1B,IAAI,CAACX,cAAc,CAACW,IAAI,CAACR,SAAS,CAAC,IAAIQ,IAAI,CAACR,SAAS,EAAE;QACrDD,mBAAmB,CAACS,IAAI,CAACR,SAAS,CAAC;MACrC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAGb,MAAMc,SAAS,GAAG,MAAOT,SAAS,IAAK;IACrC,IAAI;MACF;MACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,MAAMX,QAAQ,GAAG,MAAMd,GAAG,CAAC0B,IAAI,CAC7B,YAAY,EACZ;QAAEb,SAAS;QAAEc,QAAQ,EAAE;MAAE,CAAC,EAC1B;QACEC,OAAO,EAAE;UACP,eAAe,EAAG,UAASL,KAAM;QACnC;MACF,CAAC,CACF;MACDd,YAAY,CAACK,QAAQ,CAACG,IAAI,CAACY,IAAI,CAACC,KAAK,CAAC;MACtClB,mBAAmB,CAACC,SAAS,CAAC;IAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEhB,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAExB,SAAS;MAAEc,SAAS;MAAEZ;IAAe,CAAE;IAAAH,QAAA,EACnEA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAE3B,CAAC;AAAC9B,EAAA,CAnDWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}